C
C HEADER INFORMATION ---------------------------------------------------
C
      USE AUTO_CONSTANTS, ONLY:IBRF8,oldIBRF8,MTOTF8,oldMTOTF8,ITPF8,old
     &ITPF8,LABF8,oldLABF8,NTSTF8,oldNTSTF8,NCOLF8,oldNCOLF8,IFPRF8,oldI
     &FPRF8,TF8,oldTF8,TMF8,oldTMF8,PARF8,oldPARF8,RLDOTF8,oldRLDOTF8,UF
     &8,oldUF8,UPSF8,oldUPSF8,UDOTPSF8,oldUDOTPSF8,NPARX


C
C ARRAY ALLOCATION  ----------------------------------------------------
C
C IBR ------------
      R=SIZE(IBRF8,1)
      ALLOCATE(oldIBRF8(R))
      oldIBRF8=IBRF8
      ALLOCATE(IBRF8(R+1))
      IF(R > 0) THEN
          IBRF8=oldIBRF8
      ENDIF
      IBRF8(R+1)=IBR
      DEALLOCATE(oldIBRF8)
C
C MTOT ------------
      R=SIZE(MTOTF8,1)
      ALLOCATE(oldMTOTF8(R))
      oldMTOTF8=MTOTF8
      ALLOCATE(MTOTF8(R+1))
      IF(R > 0) THEN
          MTOTF8=oldMTOTF8
      ENDIF
      MTOTF8(R+1)=MTOT
      DEALLOCATE(oldMTOTF8)
C
C ITP ------------
      R=SIZE(ITPF8,1)
      ALLOCATE(oldITPF8(R))
      oldITPF8=ITPF8
      ALLOCATE(ITPF8(R+1))
      IF(R > 0) THEN
          ITPF8=oldITPF8
      ENDIF
      ITPF8(R+1)=ITP
      DEALLOCATE(oldITPF8)
C
C LAB ------------
      R=SIZE(LABF8,1)
      ALLOCATE(oldLABF8(R))
      oldLABF8=LABF8
      ALLOCATE(LABF8(R+1))
      IF(R > 0) THEN
          LABF8=oldLABF8
      ENDIF
      LABF8(R+1)=LAB
      DEALLOCATE(oldLABF8)
C
C NTST ------------
      R=SIZE(NTSTF8,1)
      ALLOCATE(oldNTSTF8(R))
      oldNTSTF8=NTSTF8
      ALLOCATE(NTSTF8(R+1))
      IF(R > 0) THEN
          NTSTF8=oldNTSTF8
      ENDIF
      NTSTF8(R+1)=NTST
      DEALLOCATE(oldNTSTF8)
C
C NCOL ------------
      R=SIZE(NCOLF8,1)
      ALLOCATE(oldNCOLF8(R))
      oldNCOLF8=NCOLF8
      ALLOCATE(NCOLF8(R+1))
      IF(R > 0) THEN
          NCOLF8=oldNCOLF8
      ENDIF
      NCOLF8(R+1)=NCOL
      DEALLOCATE(oldNCOLF8)
C
C IFPR ------------
      R=SIZE(IFPRF8,1)
      C=SIZE(IFPRF8,2)
      ALLOCATE(oldIFPRF8(R,NFPR))
      oldIFPRF8=IFPRF8
      ALLOCATE(IFPRF8(R+1),NFPR)
      IF(R > 0) THEN
          IFPRF8=oldIFPRF8
      ENDIF
      DO J=1,NFPR
        IFPRF8(R+1,J)=IFPR(J)
      ENDDO
      DEALLOCATE(oldIFPRF8)
C
C T ------------
      R=SIZE(TF8,1)
      ALLOCATE(oldTF8(R))
      oldTF8=TF8
      ALLOCATE(TF8(R+1))
      IF(R > 0) THEN
          TF8=oldTF8
      ENDIF
      TF8(R+1)=T
      DEALLOCATE(oldTF8)
C
C TM ------------
      R=SIZE(TMF8,1)
      C=SIZE(TMF8,2)
      ALLOCATE(oldTMF8(R,NTST+1))
      oldTMF8=TMF8
      ALLOCATE(TMF8(R+1),NTST+1)
      IF(R > 0) THEN
          TMF8=oldTMF8
      ENDIF
      DO J=1,NTST+1
        TMF8(R+1,J)=TM(J)
      ENDDO
      DEALLOCATE(oldTMF8)
C
C PAR ------------
      R=SIZE(PARF8,1)
      C=SIZE(PARF8,2)
      ALLOCATE(oldPARF8(R,NPARX))
      oldPARF8=PARF8
      ALLOCATE(PARF8(R+1),NPARX)
      IF(R > 0) THEN
          PARF8=oldPARF8
      ENDIF
      DO J=1,NPARX
        PARF8(R+1,J)=PAR(J)
      ENDDO
      DEALLOCATE(oldPARF8)
C
C RLDOT ------------
      R=SIZE(RLDOTF8,1)
      C=SIZE(RLDOTF8,2)
      ALLOCATE(oldRLDOTF8(R,NFPR))
      oldRLDOTF8=RLDOTF8
      ALLOCATE(RLDOTF8(R+1),NFPR)
      IF(R > 0) THEN
          RLDOTF8=oldRLDOTF8
      ENDIF
      DO J=1,NFPR
        RLDOTF8(R+1,J)=RLDOT(J)
      ENDDO
      DEALLOCATE(oldRLDOTF8)
C
C U ------------
      R=SIZE(UF8,1)
      C=SIZE(UF8,2)
      ALLOCATE(oldUF8(R,NDIM))
      oldUF8=UF8
      ALLOCATE(UF8(R+1),NDIM)
      IF(R > 0) THEN
          UF8=oldUF8
      ENDIF
      DO J=1,NDIM
        UF8(R+1,J)=U(J)
      ENDDO
      DEALLOCATE(oldUF8)
C
C UPS ------------
      R=SIZE(UPSF8,1)
      C=SIZE(UPSF8,2)
      P=SIZE(UPSF8,3)
      ALLOCATE(oldUPSF8(R,C,NDIM))
      oldUPSF8=UPSF8
      ALLOCATE(UPSF8(R+1),NDIM)
      IF(R > 0) THEN
          UPSF8=oldUPSF8
      ENDIF
      DO I=1,NTST+1
        DO J=1,NDIM
          UPSF8(I,J,P+1)=UPS(I,J)
        ENDDO
      ENDDO
      DEALLOCATE(oldUPSF8)
C
C UDOTPS ------------
      R=SIZE(UDOTPSF8,1)
      C=SIZE(UDOTPSF8,2)
      P=SIZE(UDOTPSF8,3)
      ALLOCATE(oldUDOTPSF8(R,C,NDIM))
      oldUDOTPSF8=UDOTPSF8
      ALLOCATE(UDOTPSF8(R+1),NDIM)
      IF(R > 0) THEN
          UDOTPSF8=oldUDOTPSF8
      ENDIF
      DO I=1,NTST+1
        DO J=1,NDIM
          UDOTPSF8(I,J,P+1)=UDOTPS(I,J)
        ENDDO
      ENDDO
      DEALLOCATE(oldUDOTPSF8)
C


C
C MODULE DECLARATIONS --------------------------------------------------
C
      INTEGER,ALLOCATABLE :: IBRF8(:)
      INTEGER,ALLOCATABLE :: oldIBRF8(:)
      INTEGER,ALLOCATABLE :: MTOTF8(:)
      INTEGER,ALLOCATABLE :: oldMTOTF8(:)
      INTEGER,ALLOCATABLE :: ITPF8(:)
      INTEGER,ALLOCATABLE :: oldITPF8(:)
      INTEGER,ALLOCATABLE :: LABF8(:)
      INTEGER,ALLOCATABLE :: oldLABF8(:)
      INTEGER,ALLOCATABLE :: NTSTF8(:)
      INTEGER,ALLOCATABLE :: oldNTSTF8(:)
      INTEGER,ALLOCATABLE :: NCOLF8(:)
      INTEGER,ALLOCATABLE :: oldNCOLF8(:)
      INTEGER,ALLOCATABLE :: IFPRF8(:,:)
      INTEGER,ALLOCATABLE :: oldIFPRF8(:,:)
      DOUBLE PRECISION,ALLOCATABLE :: TF8(:)
      DOUBLE PRECISION,ALLOCATABLE :: oldTF8(:)
      DOUBLE PRECISION,ALLOCATABLE :: TMF8(:,:)
      DOUBLE PRECISION,ALLOCATABLE :: oldTMF8(:,:)
      DOUBLE PRECISION,ALLOCATABLE :: PARF8(:,:)
      DOUBLE PRECISION,ALLOCATABLE :: oldPARF8(:,:)
      DOUBLE PRECISION,ALLOCATABLE :: RLDOTF8(:,:)
      DOUBLE PRECISION,ALLOCATABLE :: oldRLDOTF8(:,:)
      DOUBLE PRECISION,ALLOCATABLE :: UF8(:,:)
      DOUBLE PRECISION,ALLOCATABLE :: oldUF8(:,:)
      DOUBLE PRECISION,ALLOCATABLE :: UPSF8(:,:,:)
      DOUBLE PRECISION,ALLOCATABLE :: oldUPSF8(:,:,:)
      DOUBLE PRECISION,ALLOCATABLE :: UDOTPSF8(:,:,:)
      DOUBLE PRECISION,ALLOCATABLE :: oldUDOTPSF8(:,:,:)
C
C ALLOCATE VARIABLES IN COPYDSTOBJECTS.F -------------------------------
C
      ALLOCATE(IBRF8(0))
      ALLOCATE(MTOTF8(0))
      ALLOCATE(ITPF8(0))
      ALLOCATE(LABF8(0))
      ALLOCATE(NTSTF8(0))
      ALLOCATE(NCOLF8(0))
      ALLOCATE(IFPRF8(0,0))
      ALLOCATE(TF8(0))
      ALLOCATE(TMF8(0,0))
      ALLOCATE(PARF8(0,0))
      ALLOCATE(RLDOTF8(0,0))
      ALLOCATE(UF8(0,0))
      ALLOCATE(UPSF8(0,0,0))
      ALLOCATE(UDOTPSF8(0,0,0))
C
C DEALLOCATE ALLOCATED VARIABLES ---------------------------------------
C
      IF(ALLOCATED(IBRF8))DEALLOCATE(IBRF8)
      IF(ALLOCATED(oldIBRF8))DEALLOCATE(oldIBRF8)
      IF(ALLOCATED(MTOTF8))DEALLOCATE(MTOTF8)
      IF(ALLOCATED(oldMTOTF8))DEALLOCATE(oldMTOTF8)
      IF(ALLOCATED(ITPF8))DEALLOCATE(ITPF8)
      IF(ALLOCATED(oldITPF8))DEALLOCATE(oldITPF8)
      IF(ALLOCATED(LABF8))DEALLOCATE(LABF8)
      IF(ALLOCATED(oldLABF8))DEALLOCATE(oldLABF8)
      IF(ALLOCATED(NTSTF8))DEALLOCATE(NTSTF8)
      IF(ALLOCATED(oldNTSTF8))DEALLOCATE(oldNTSTF8)
      IF(ALLOCATED(NCOLF8))DEALLOCATE(NCOLF8)
      IF(ALLOCATED(oldNCOLF8))DEALLOCATE(oldNCOLF8)
      IF(ALLOCATED(IFPRF8))DEALLOCATE(IFPRF8)
      IF(ALLOCATED(oldIFPRF8))DEALLOCATE(oldIFPRF8)
      IF(ALLOCATED(TF8))DEALLOCATE(TF8)
      IF(ALLOCATED(oldTF8))DEALLOCATE(oldTF8)
      IF(ALLOCATED(TMF8))DEALLOCATE(TMF8)
      IF(ALLOCATED(oldTMF8))DEALLOCATE(oldTMF8)
      IF(ALLOCATED(PARF8))DEALLOCATE(PARF8)
      IF(ALLOCATED(oldPARF8))DEALLOCATE(oldPARF8)
      IF(ALLOCATED(RLDOTF8))DEALLOCATE(RLDOTF8)
      IF(ALLOCATED(oldRLDOTF8))DEALLOCATE(oldRLDOTF8)
      IF(ALLOCATED(UF8))DEALLOCATE(UF8)
      IF(ALLOCATED(oldUF8))DEALLOCATE(oldUF8)
      IF(ALLOCATED(UPSF8))DEALLOCATE(UPSF8)
      IF(ALLOCATED(oldUPSF8))DEALLOCATE(oldUPSF8)
      IF(ALLOCATED(UDOTPSF8))DEALLOCATE(UDOTPSF8)
      IF(ALLOCATED(oldUDOTPSF8))DEALLOCATE(oldUDOTPSF8)
