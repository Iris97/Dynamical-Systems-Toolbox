      mwPointer IBRF8ptr1, IBRF8ptr2
      mwPointer MTOTF8ptr1, MTOTF8ptr2
      mwPointer ITPF8ptr1, ITPF8ptr2
      mwPointer LABF8ptr1, LABF8ptr2
      mwPointer NFPRF8ptr1, NFPRF8ptr2
      mwPointer ISWF8ptr1, ISWF8ptr2
      mwPointer NTPLF8ptr1, NTPLF8ptr2
      mwPointer NARF8ptr1, NARF8ptr2
      mwPointer NROWPRF8ptr1, NROWPRF8ptr2
      mwPointer NTSTF8ptr1, NTSTF8ptr2
      mwPointer NCOLF8ptr1, NCOLF8ptr2
      mwPointer NPARXF8ptr1, NPARXF8ptr2
      mwPointer IFPRF8ptr1, IFPRF8ptr2
      mwPointer TF8ptr1, TF8ptr2
      mwPointer TMF8ptr1, TMF8ptr2
      mwPointer PARF8ptr1, PARF8ptr2
      mwPointer RLDOTF8ptr1, RLDOTF8ptr2
      mwPointer UF8ptr1, UF8ptr2
      mwPointer UPSF8ptr1, UPSF8ptr2
      mwPointer UDOTPSF8ptr1, UDOTPSF8ptr2
      REAL*8, POINTER::IBRF8MWS(:)
      REAL*8, POINTER::MTOTF8MWS(:)
      REAL*8, POINTER::ITPF8MWS(:)
      REAL*8, POINTER::LABF8MWS(:)
      REAL*8, POINTER::NFPRF8MWS(:)
      REAL*8, POINTER::ISWF8MWS(:)
      REAL*8, POINTER::NTPLF8MWS(:)
      REAL*8, POINTER::NARF8MWS(:)
      REAL*8, POINTER::NROWPRF8MWS(:)
      REAL*8, POINTER::NTSTF8MWS(:)
      REAL*8, POINTER::NCOLF8MWS(:)
      REAL*8, POINTER::NPARXF8MWS(:)
      REAL*8, POINTER::IFPRF8MWS(:,:)
      REAL*8, POINTER::TF8MWS(:)
      REAL*8, POINTER::TMF8MWS(:,:)
      REAL*8, POINTER::PARF8MWS(:,:)
      REAL*8, POINTER::RLDOTF8MWS(:,:)
      REAL*8, POINTER::UF8MWS(:,:)
      REAL*8, POINTER::UPSF8MWS(:,:,:)
      REAL*8, POINTER::UDOTPSF8MWS(:,:,:)
C
C
C Assign Ibr values --------------
      IBRF8ptr1=mxGetProperty(PLHS(2),1,'Ibr')
C
      IF( IBRF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Ibr not found")
      ENDIF
C
      M=SIZE(IBRF8)
      D1=M
      IBRF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(IBRF8ptr2)), 1, D1 )
      IBRF8MWS => Apx1
      IF( .NOT.ASSOCIATED(IBRF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Ibr pointer data")
      ENDIF
C
      DO I=1,M
        IBRF8MWS(I)=IBRF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Ibr',IBRF8ptr2)
      CALL mxDestroyArray(IBRF8ptr2)
      CALL mxDestroyArray(IBRF8ptr1)
C
C Assign Mtot values --------------
      MTOTF8ptr1=mxGetProperty(PLHS(2),1,'Mtot')
C
      IF( MTOTF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Mtot not found")
      ENDIF
C
      M=SIZE(MTOTF8)
      D1=M
      MTOTF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(MTOTF8ptr2)), 1, D1 )
      MTOTF8MWS => Apx1
      IF( .NOT.ASSOCIATED(MTOTF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Mtot pointer data")
      ENDIF
C
      DO I=1,M
        MTOTF8MWS(I)=MTOTF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Mtot',MTOTF8ptr2)
      CALL mxDestroyArray(MTOTF8ptr2)
      CALL mxDestroyArray(MTOTF8ptr1)
C
C Assign Itp values --------------
      ITPF8ptr1=mxGetProperty(PLHS(2),1,'Itp')
C
      IF( ITPF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Itp not found")
      ENDIF
C
      M=SIZE(ITPF8)
      D1=M
      ITPF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(ITPF8ptr2)), 1, D1 )
      ITPF8MWS => Apx1
      IF( .NOT.ASSOCIATED(ITPF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Itp pointer data")
      ENDIF
C
      DO I=1,M
        ITPF8MWS(I)=ITPF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Itp',ITPF8ptr2)
      CALL mxDestroyArray(ITPF8ptr2)
      CALL mxDestroyArray(ITPF8ptr1)
C
C Assign Lab values --------------
      LABF8ptr1=mxGetProperty(PLHS(2),1,'Lab')
C
      IF( LABF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Lab not found")
      ENDIF
C
      M=SIZE(LABF8)
      D1=M
      LABF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(LABF8ptr2)), 1, D1 )
      LABF8MWS => Apx1
      IF( .NOT.ASSOCIATED(LABF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Lab pointer data")
      ENDIF
C
      DO I=1,M
        LABF8MWS(I)=LABF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Lab',LABF8ptr2)
      CALL mxDestroyArray(LABF8ptr2)
      CALL mxDestroyArray(LABF8ptr1)
C
C Assign Nfpr values --------------
      NFPRF8ptr1=mxGetProperty(PLHS(2),1,'Nfpr')
C
      IF( NFPRF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Nfpr not found")
      ENDIF
C
      M=SIZE(NFPRF8)
      D1=M
      NFPRF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(NFPRF8ptr2)), 1, D1 )
      NFPRF8MWS => Apx1
      IF( .NOT.ASSOCIATED(NFPRF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Nfpr pointer data")
      ENDIF
C
      DO I=1,M
        NFPRF8MWS(I)=NFPRF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Nfpr',NFPRF8ptr2)
      CALL mxDestroyArray(NFPRF8ptr2)
      CALL mxDestroyArray(NFPRF8ptr1)
C
C Assign Isw values --------------
      ISWF8ptr1=mxGetProperty(PLHS(2),1,'Isw')
C
      IF( ISWF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Isw not found")
      ENDIF
C
      M=SIZE(ISWF8)
      D1=M
      ISWF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(ISWF8ptr2)), 1, D1 )
      ISWF8MWS => Apx1
      IF( .NOT.ASSOCIATED(ISWF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Isw pointer data")
      ENDIF
C
      DO I=1,M
        ISWF8MWS(I)=ISWF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Isw',ISWF8ptr2)
      CALL mxDestroyArray(ISWF8ptr2)
      CALL mxDestroyArray(ISWF8ptr1)
C
C Assign Ntpl values --------------
      NTPLF8ptr1=mxGetProperty(PLHS(2),1,'Ntpl')
C
      IF( NTPLF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Ntpl not found")
      ENDIF
C
      M=SIZE(NTPLF8)
      D1=M
      NTPLF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(NTPLF8ptr2)), 1, D1 )
      NTPLF8MWS => Apx1
      IF( .NOT.ASSOCIATED(NTPLF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Ntpl pointer data")
      ENDIF
C
      DO I=1,M
        NTPLF8MWS(I)=NTPLF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Ntpl',NTPLF8ptr2)
      CALL mxDestroyArray(NTPLF8ptr2)
      CALL mxDestroyArray(NTPLF8ptr1)
C
C Assign Nar values --------------
      NARF8ptr1=mxGetProperty(PLHS(2),1,'Nar')
C
      IF( NARF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Nar not found")
      ENDIF
C
      M=SIZE(NARF8)
      D1=M
      NARF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(NARF8ptr2)), 1, D1 )
      NARF8MWS => Apx1
      IF( .NOT.ASSOCIATED(NARF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Nar pointer data")
      ENDIF
C
      DO I=1,M
        NARF8MWS(I)=NARF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Nar',NARF8ptr2)
      CALL mxDestroyArray(NARF8ptr2)
      CALL mxDestroyArray(NARF8ptr1)
C
C Assign Nrowpr values --------------
      NROWPRF8ptr1=mxGetProperty(PLHS(2),1,'Nrowpr')
C
      IF( NROWPRF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Nrowpr not found")
      ENDIF
C
      M=SIZE(NROWPRF8)
      D1=M
      NROWPRF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(NROWPRF8ptr2)), 1, D1 )
      NROWPRF8MWS => Apx1
      IF( .NOT.ASSOCIATED(NROWPRF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Nrowpr pointer data")
      ENDIF
C
      DO I=1,M
        NROWPRF8MWS(I)=NROWPRF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Nrowpr',NROWPRF8ptr2)
      CALL mxDestroyArray(NROWPRF8ptr2)
      CALL mxDestroyArray(NROWPRF8ptr1)
C
C Assign Ntst values --------------
      NTSTF8ptr1=mxGetProperty(PLHS(2),1,'Ntst')
C
      IF( NTSTF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Ntst not found")
      ENDIF
C
      M=SIZE(NTSTF8)
      D1=M
      NTSTF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(NTSTF8ptr2)), 1, D1 )
      NTSTF8MWS => Apx1
      IF( .NOT.ASSOCIATED(NTSTF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Ntst pointer data")
      ENDIF
C
      DO I=1,M
        NTSTF8MWS(I)=NTSTF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Ntst',NTSTF8ptr2)
      CALL mxDestroyArray(NTSTF8ptr2)
      CALL mxDestroyArray(NTSTF8ptr1)
C
C Assign Ncol values --------------
      NCOLF8ptr1=mxGetProperty(PLHS(2),1,'Ncol')
C
      IF( NCOLF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Ncol not found")
      ENDIF
C
      M=SIZE(NCOLF8)
      D1=M
      NCOLF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(NCOLF8ptr2)), 1, D1 )
      NCOLF8MWS => Apx1
      IF( .NOT.ASSOCIATED(NCOLF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Ncol pointer data")
      ENDIF
C
      DO I=1,M
        NCOLF8MWS(I)=NCOLF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Ncol',NCOLF8ptr2)
      CALL mxDestroyArray(NCOLF8ptr2)
      CALL mxDestroyArray(NCOLF8ptr1)
C
C Assign Nparx values --------------
      NPARXF8ptr1=mxGetProperty(PLHS(2),1,'Nparx')
C
      IF( NPARXF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Nparx not found")
      ENDIF
C
      M=SIZE(NPARXF8)
      D1=M
      NPARXF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(NPARXF8ptr2)), 1, D1 )
      NPARXF8MWS => Apx1
      IF( .NOT.ASSOCIATED(NPARXF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Nparx pointer data")
      ENDIF
C
      DO I=1,M
        NPARXF8MWS(I)=NPARXF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Nparx',NPARXF8ptr2)
      CALL mxDestroyArray(NPARXF8ptr2)
      CALL mxDestroyArray(NPARXF8ptr1)
C
C Assign Ifpr values --------------
      IFPRF8ptr1=mxGetProperty(PLHS(2),1,'Ifpr')
C
      IF( IFPRF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Ifpr not found")
      ENDIF
C
      M=SIZE(IFPRF8,1)
      N=SIZE(IFPRF8,2)
      D2(1)=M
      D2(2)=N
      IFPRF8ptr2 = mxCreateNumericArray(2,D2,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx2(%VAL(mxGetPr(IFPRF8ptr2)), 1, D2 )
      IFPRF8MWS => Apx2
      IF( .NOT.ASSOCIATED(IFPRF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Ifpr pointer data")
      ENDIF
C
      DO I=1,M
        DO J=1,N
          IFPRF8MWS(I,J)=IFPRF8(I,J)
        ENDDO
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Ifpr',IFPRF8ptr2)
      CALL mxDestroyArray(IFPRF8ptr2)
      CALL mxDestroyArray(IFPRF8ptr1)
C
C Assign T values --------------
      TF8ptr1=mxGetProperty(PLHS(2),1,'T')
C
      IF( TF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property T not found")
      ENDIF
C
      M=SIZE(TF8)
      D1=M
      TF8ptr2 = mxCreateNumericArray(1,D1,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx1(%VAL(mxGetPr(TF8ptr2)), 1, D1 )
      TF8MWS => Apx1
      IF( .NOT.ASSOCIATED(TF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to T pointer data")
      ENDIF
C
      DO I=1,M
        TF8MWS(I)=TF8(I)
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'T',TF8ptr2)
      CALL mxDestroyArray(TF8ptr2)
      CALL mxDestroyArray(TF8ptr1)
C
C Assign Tm values --------------
      TMF8ptr1=mxGetProperty(PLHS(2),1,'Tm')
C
      IF( TMF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Tm not found")
      ENDIF
C
      M=SIZE(TMF8,1)
      N=SIZE(TMF8,2)
      D2(1)=M
      D2(2)=N
      TMF8ptr2 = mxCreateNumericArray(2,D2,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx2(%VAL(mxGetPr(TMF8ptr2)), 1, D2 )
      TMF8MWS => Apx2
      IF( .NOT.ASSOCIATED(TMF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Tm pointer data")
      ENDIF
C
      DO I=1,M
        DO J=1,N
          TMF8MWS(I,J)=TMF8(I,J)
        ENDDO
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Tm',TMF8ptr2)
      CALL mxDestroyArray(TMF8ptr2)
      CALL mxDestroyArray(TMF8ptr1)
C
C Assign Par values --------------
      PARF8ptr1=mxGetProperty(PLHS(2),1,'Par')
C
      IF( PARF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Par not found")
      ENDIF
C
      M=SIZE(PARF8,1)
      N=SIZE(PARF8,2)
      D2(1)=M
      D2(2)=N
      PARF8ptr2 = mxCreateNumericArray(2,D2,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx2(%VAL(mxGetPr(PARF8ptr2)), 1, D2 )
      PARF8MWS => Apx2
      IF( .NOT.ASSOCIATED(PARF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Par pointer data")
      ENDIF
C
      DO I=1,M
        DO J=1,N
          PARF8MWS(I,J)=PARF8(I,J)
        ENDDO
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Par',PARF8ptr2)
      CALL mxDestroyArray(PARF8ptr2)
      CALL mxDestroyArray(PARF8ptr1)
C
C Assign Rldot values --------------
      RLDOTF8ptr1=mxGetProperty(PLHS(2),1,'Rldot')
C
      IF( RLDOTF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Rldot not found")
      ENDIF
C
      M=SIZE(RLDOTF8,1)
      N=SIZE(RLDOTF8,2)
      D2(1)=M
      D2(2)=N
      RLDOTF8ptr2 = mxCreateNumericArray(2,D2,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx2(%VAL(mxGetPr(RLDOTF8ptr2)), 1, D2 )
      RLDOTF8MWS => Apx2
      IF( .NOT.ASSOCIATED(RLDOTF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Rldot pointer data")
      ENDIF
C
      DO I=1,M
        DO J=1,N
          RLDOTF8MWS(I,J)=RLDOTF8(I,J)
        ENDDO
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Rldot',RLDOTF8ptr2)
      CALL mxDestroyArray(RLDOTF8ptr2)
      CALL mxDestroyArray(RLDOTF8ptr1)
C
C Assign U values --------------
      UF8ptr1=mxGetProperty(PLHS(2),1,'U')
C
      IF( UF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property U not found")
      ENDIF
C
      M=SIZE(UF8,1)
      N=SIZE(UF8,2)
      D2(1)=M
      D2(2)=N
      UF8ptr2 = mxCreateNumericArray(2,D2,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx2(%VAL(mxGetPr(UF8ptr2)), 1, D2 )
      UF8MWS => Apx2
      IF( .NOT.ASSOCIATED(UF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to U pointer data")
      ENDIF
C
      DO I=1,M
        DO J=1,N
          UF8MWS(I,J)=UF8(I,J)
        ENDDO
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'U',UF8ptr2)
      CALL mxDestroyArray(UF8ptr2)
      CALL mxDestroyArray(UF8ptr1)
C
C Assign Ups values --------------
      UPSF8ptr1=mxGetProperty(PLHS(2),1,'Ups')
C
      IF( UPSF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Ups not found")
      ENDIF
C
      M=SIZE(UPSF8,1)
      N=SIZE(UPSF8,2)
      O=SIZE(UPSF8,3)
      D3(1)=M
      D3(2)=N
      D3(3)=O
      UPSF8ptr2 = mxCreateNumericArray(3,D3,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx3(%VAL(mxGetPr(UPSF8ptr2)), 1, D3 )
      UPSF8MWS => Apx3
      IF( .NOT.ASSOCIATED(UPSF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Ups pointer data")
      ENDIF
C
      DO I=1,M
        DO J=1,N
          DO K=1,O
            UPSF8MWS(I,J,K)=UPSF8(I,J,K)
          ENDDO
        ENDDO
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Ups',UPSF8ptr2)
      CALL mxDestroyArray(UPSF8ptr2)
      CALL mxDestroyArray(UPSF8ptr1)
C
C Assign Udotps values --------------
      UDOTPSF8ptr1=mxGetProperty(PLHS(2),1,'Udotps')
C
      IF( UDOTPSF8ptr1 == 0 ) THEN
        CALL mexErrMsgTxt("Property Udotps not found")
      ENDIF
C
      M=SIZE(UDOTPSF8,1)
      N=SIZE(UDOTPSF8,2)
      O=SIZE(UDOTPSF8,3)
      D3(1)=M
      D3(2)=N
      D3(3)=O
      UDOTPSF8ptr2 = mxCreateNumericArray(3,D3,mxClassIDFromClassName('double'),0)
      CALL MatlabAPI_COM_Apx3(%VAL(mxGetPr(UDOTPSF8ptr2)), 1, D3 )
      UDOTPSF8MWS => Apx3
      IF( .NOT.ASSOCIATED(UDOTPSF8MWS) ) THEN
        CALL mexErrMsgTxt("Internal error pointing to Udotps pointer data")
      ENDIF
C
      DO I=1,M
        DO J=1,N
          DO K=1,O
            UDOTPSF8MWS(I,J,K)=UDOTPSF8(I,J,K)
          ENDDO
        ENDDO
      ENDDO
C
      CALL mxSetProperty(PLHS(2),1,'Udotps',UDOTPSF8ptr2)
      CALL mxDestroyArray(UDOTPSF8ptr2)
      CALL mxDestroyArray(UDOTPSF8ptr1)
C
